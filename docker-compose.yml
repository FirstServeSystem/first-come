version: "3.8"

services:
  db:
    image: mysql:latest
    container_name: first-serve-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DOCKER_MYSQL_ROOTPASSWORD}
      MYSQL_DATABASE: docker_mysql  # firstserveDataBase
      MYSQL_USER: ${DOCKER_MYSQL_USERNAME}
      MYSQL_PASSWORD: ${DOCKER_MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u${DOCKER_MYSQL_USERNAME} -p${DOCKER_MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 10s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile # 스프링 부트 애플리케이션의 도커 이미지
    container_name: first-serve-container
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${DOCKER_MYSQL_URL}
      SPRING_DATASOURCE_USERNAME: ${DOCKER_MYSQL_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DOCKER_MYSQL_PASSWORD}
    depends_on:
      db :
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:latest
    container_name: first-serve-redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data: